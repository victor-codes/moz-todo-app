{"version":3,"sources":["components/UsePrevious.js","components/Todo.js","components/Form.js","components/FilterButton.js","App.js","index.js"],"names":["usePrevious","value","ref","useRef","useEffect","current","Todo","props","useState","isEditing","setEditing","newName","setNewName","editFieldRef","editButtonRef","editingTemplate","className","onSubmit","e","preventDefault","editTask","id","htmlFor","name","type","onChange","target","onClick","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","wasEditing","focus","Form","setName","addTask","autoComplete","FilterButton","aria-pressed","isPressed","setFilter","FILTER_MAP","All","active","task","FILTER_NAMES","Object","keys","App","tasks","setTasks","filter","filterList","map","editedTask","updateTasks","console","log","remainingTask","taskList","taskNoun","length","taskHeader","listHeadingRef","prevTaskLength","newTasks","nanoid","tabIndex","role","aria-labelledby","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.86930a84.chunk.js","sourcesContent":["import React, { useEffect, useRef } from \"react\";\n\nexport default function usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport usePrevious from \"./UsePrevious\";\n\nexport default function Todo(props) {\n  const [isEditing, setEditing] = useState(false);\n  const [newName, setNewName] = useState(\"\");\n\n  const editFieldRef = useRef(null);\n  const editButtonRef = useRef(null);\n\n  function handleChange(e) {\n    setNewName(e.target.value);\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.editTask(props.id, newName);\n    setNewName(\"\");\n    setEditing(false);\n  }\n  const editingTemplate = (\n    <form className=\"stack-small\" onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label className=\"todo-label\" htmlFor={props.id}>\n          New name for {props.name}\n        </label>\n        <input\n          id={props.id}\n          className=\"todo-text\"\n          type=\"text\"\n          value={newName}\n          onChange={handleChange}\n          ref={editFieldRef}\n        />\n      </div>\n      <div className=\"btn-group\">\n        <button\n          type=\"button\"\n          className=\"btn todo-cancel\"\n          onClick={() => {\n            setEditing(false);\n          }}\n        >\n          Cancel\n          <span className=\"visually-hidden\">renaming {props.name}</span>\n        </button>\n        <button\n          type=\"submit\"\n          className=\"btn btn__primary todo-edit\"\n          onClick={() => {\n            setEditing(true);\n          }}\n        >\n          Save\n          <span className=\"visually-hidden\">new name for {props.name}</span>\n        </button>\n      </div>\n    </form>\n  );\n\n  const viewTemplate = (\n    <div className=\"stack-small\">\n      <div className=\"c-cb\">\n        <input\n          id={props.id}\n          type=\"checkbox\"\n          defaultChecked={props.completed}\n          onChange={() => props.toggleTaskCompleted(props.id)}\n        />\n        <label className=\"todo-label\" htmlFor={props.id}>\n          {props.name}\n        </label>\n      </div>\n      <div className=\"btn-group\">\n        <button\n          type=\"button\"\n          className=\"btn\"\n          onClick={() => {\n            setEditing(true);\n          }}\n          ref={editButtonRef}\n        >\n          Edit <span className=\"visually-hidden\">{props.name}</span>\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn__danger\"\n          onClick={() => props.deleteTask(props.id)}\n        >\n          Delete <span className=\"visually-hidden\">{props.name}</span>\n        </button>\n      </div>\n    </div>\n  );\n\n  const wasEditing = usePrevious(isEditing);\n  useEffect(() => {\n    if (!wasEditing && isEditing) {\n      editFieldRef.current.focus();\n    }\n    if (wasEditing && !isEditing) {\n      editButtonRef.current.focus();\n    }\n  }, [wasEditing, isEditing]);\n\n  return (\n    <li className=\"todo stack-small\">\n      {isEditing ? editingTemplate : viewTemplate}\n    </li>\n  );\n}\n\nexport { Todo };\n","import React, { useState } from \"react\";\n\nfunction Form(props) {\n  const [name, setName] = useState(\"\");\n\n  function handelChange(e) {\n    setName(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.addTask(name);\n    setName(\"\");\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2 className=\"label-warapper\">\n        <label htmlFor=\"new-todo-input\" className=\"label__lg\">\n          What needs to be done?\n        </label>\n      </h2>\n      <input\n        type=\"text\"\n        id=\"new-todo-input\"\n        className=\"input input_lg\"\n        name=\"text\"\n        autoComplete=\"off\"\n        value={name}\n        onChange={handelChange}\n      />\n      <button type=\"submit\" className=\"btn btn__primary btn__lg\">\n        Add\n      </button>\n    </form>\n  );\n}\n\nexport default Form;\n","import { React } from \"react\";\n\nfunction FilterButton(props) {\n  return (\n    <button\n      type=\"button\"\n      className=\"btn toggle-btn\"\n      aria-pressed={props.isPressed}\n      onClick={() => {\n        props.setFilter(props.name);\n      }}\n    >\n      <span className=\"visually-hidden\">Show </span>\n      <span>{props.name}</span>\n      <span className=\"visually-hidden\">tasks</span>\n    </button>\n  );\n}\n\nexport default FilterButton;\n","import React, { useRef, useState, useEffect } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { Todo } from \"./components/Todo\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\nimport usePrevious from \"./components/UsePrevious\";\n\nconst FILTER_MAP = {\n  All: () => true,\n  active: (task) => !task.completed,\n  completed: (task) => task.completed,\n};\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState(\"All\");\n\n  const filterList = FILTER_NAMES.map((name) => (\n    <FilterButton\n      key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  ));\n\n  function addTask(name) {\n    const newTasks = { id: \"todo-\" + nanoid(), name: name, completed: false };\n    setTasks([...tasks, newTasks]);\n  }\n\n  function editTask(id, newName) {\n    const editedTask = tasks.map((task) => {\n      if (id === task.id) {\n        return { ...tasks, name: newName };\n      }\n      return task;\n    });\n    setTasks(editedTask);\n  }\n\n  function toggleTaskCompleted(id) {\n    const updateTasks = tasks.map((task) => {\n      if (id === task.id) {\n        return { ...task, completed: !task.completed };\n      }\n      return task;\n    });\n\n    setTasks(updateTasks);\n    console.log(tasks[0]);\n  }\n\n  function deleteTask(id) {\n    const remainingTask = tasks.filter((task) => id !== task.id);\n    setTasks(remainingTask);\n    console.log(id);\n  }\n\n  const taskList = tasks\n    .filter(FILTER_MAP[filter])\n    .map((task) => (\n      <Todo\n        id={task.id}\n        name={task.name}\n        completed={task.completed}\n        key={task.id}\n        toggleTaskCompleted={toggleTaskCompleted}\n        deleteTask={deleteTask}\n        editTask={editTask}\n      />\n    ));\n\n  const taskNoun = taskList.length > 1 ? \"tasks\" : \"task\";\n  const taskHeader = `${taskList.length} ${taskNoun} remaining`;\n\n  const listHeadingRef = useRef(null);\n  const prevTaskLength = usePrevious(tasks.length);\n\n  useEffect(() => {\n    if (tasks.length - prevTaskLength === -1) {\n      listHeadingRef.current.focus();\n    }\n  }, [tasks.length, prevTaskLength]);\n\n  return (\n    <div className=\"todoapp stack-large\">\n      <h1>TodoMatic</h1>\n      <Form addTask={addTask} />\n      <div className=\"filters btn-group stack-exception\">{filterList}</div>\n      <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef}>\n        {taskHeader}\n      </h2>\n\n      <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-execption\"\n        aria-labelledby=\"list-heading\"\n      >\n        {taskList}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst DATA = [\n  { id: \"todo-0\", name: \"Eat\", completed: true },\n  { id: \"todo-1\", name: \"Sleep\", completed: false },\n  { id: \"todo-2\", name: \"Repeat\", completed: false },\n];\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App tasks={DATA} />,\n  document.getElementById(\"root\")\n  // console.log(props.tasks)\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}