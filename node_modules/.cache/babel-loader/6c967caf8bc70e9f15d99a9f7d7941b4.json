{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\hp\\\\Documents\\\\Code\\\\moz-todo-react\\\\src\\\\components\\\\Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nexport default function Todo(props) {\n  _s();\n\n  const [isEditing, setEditing] = useState(false);\n  const [newName, setNewName] = useState(\"\");\n\n  function handleChange(e) {\n    setNewName(e.target.value);\n  }\n\n  const editingTemplate = /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"stack-small\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"todo-label\",\n        htmlFor: props.id,\n        children: [\"New name for \", props.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: props.id,\n        className: \"todo-text\",\n        type: \"text\",\n        value: newName,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn todo-cancel\",\n        children: [\"Cancel\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: [\"renaming \", props.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn__primary todo-edit\",\n        onClick: () => {\n          setEditing(true);\n        },\n        children: [\"Save\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: [\"new name for \", props.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n\n  const viewTemplate = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stack-small\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"c-cb\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: props.id,\n        type: \"checkbox\",\n        defaultChecked: props.completed,\n        onChange: () => props.toggleTaskCompleted(props.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"todo-label\",\n        htmlFor: props.id,\n        children: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn\",\n        onClick: () => {\n          setEditing(true);\n        },\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn__danger\",\n        onClick: () => props.deleteTask(props.id),\n        children: [\"Delete \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"todo stack-small\",\n    children: isEditing ? editingTemplate : viewTemplate\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Todo, \"tAvBlY+lVob4HtyYzjiL5I4XJKM=\");\n\n_c = Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["C:/Users/hp/Documents/Code/moz-todo-react/src/components/Todo.js"],"names":["React","useState","Todo","props","isEditing","setEditing","newName","setNewName","handleChange","e","target","value","editingTemplate","id","name","viewTemplate","completed","toggleTaskCompleted","deleteTask"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nexport default function Todo(props) {\n  const [isEditing, setEditing] = useState(false);\n  const [newName, setNewName] = useState(\"\");\n\n  function handleChange(e) {\n    setNewName(e.target.value);\n  }\n\n  const editingTemplate = (\n    <form className=\"stack-small\">\n      <div className=\"form-group\">\n        <label className=\"todo-label\" htmlFor={props.id}>\n          New name for {props.name}\n        </label>\n        <input\n          id={props.id}\n          className=\"todo-text\"\n          type=\"text\"\n          value={newName}\n          onChange={handleChange}\n        />\n      </div>\n      <div className=\"btn-group\">\n        <button type=\"button\" className=\"btn todo-cancel\">\n          Cancel\n          <span className=\"visually-hidden\">renaming {props.name}</span>\n        </button>\n        <button\n          type=\"submit\"\n          className=\"btn btn__primary todo-edit\"\n          onClick={() => {\n            setEditing(true);\n          }}\n        >\n          Save\n          <span className=\"visually-hidden\">new name for {props.name}</span>\n        </button>\n      </div>\n    </form>\n  );\n\n  const viewTemplate = (\n    <div className=\"stack-small\">\n      <div className=\"c-cb\">\n        <input\n          id={props.id}\n          type=\"checkbox\"\n          defaultChecked={props.completed}\n          onChange={() => props.toggleTaskCompleted(props.id)}\n        />\n        <label className=\"todo-label\" htmlFor={props.id}>\n          {props.name}\n        </label>\n      </div>\n      <div className=\"btn-group\">\n        <button\n          type=\"button\"\n          className=\"btn\"\n          onClick={() => {\n            setEditing(true);\n          }}\n        >\n          Edit <span className=\"visually-hidden\">{props.name}</span>\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn__danger\"\n          onClick={() => props.deleteTask(props.id)}\n        >\n          Delete <span className=\"visually-hidden\">{props.name}</span>\n        </button>\n      </div>\n    </div>\n  );\n\n  return (\n    <li className=\"todo stack-small\">\n      {isEditing ? editingTemplate : viewTemplate}\n    </li>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}