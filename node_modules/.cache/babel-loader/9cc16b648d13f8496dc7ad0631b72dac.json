{"ast":null,"code":"import _slicedToArray from\"C:/Users/hp/Documents/Code/moz-todo-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useEffect,useRef,useState}from\"react\";import usePrevious from\"./UsePrevious\";export default function Todo(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isEditing=_useState2[0],setEditing=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),newName=_useState4[0],setNewName=_useState4[1];var editFieldRef=useRef(null);var editButtonRef=useRef(null);function handleChange(e){setNewName(e.target.value);}function handleSubmit(e){e.preventDefault();props.editTask(props.id,newName);setNewName(\"\");setEditing(false);}var editingTemplate=/*#__PURE__*/_jsxs(\"form\",{className:\"stack-small\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"todo-label\",htmlFor:props.id,children:[\"New name for \",props.name]}),/*#__PURE__*/_jsx(\"input\",{id:props.id,className:\"todo-text\",type:\"text\",value:newName,onChange:handleChange,ref:editFieldRef})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"btn-group\",children:[/*#__PURE__*/_jsxs(\"button\",{type:\"button\",className:\"btn todo-cancel\",onClick:function onClick(){setEditing(false);},children:[\"Cancel\",/*#__PURE__*/_jsxs(\"span\",{className:\"visually-hidden\",children:[\"renaming \",props.name]})]}),/*#__PURE__*/_jsxs(\"button\",{type:\"submit\",className:\"btn btn__primary todo-edit\",onClick:function onClick(){setEditing(true);},children:[\"Save\",/*#__PURE__*/_jsxs(\"span\",{className:\"visually-hidden\",children:[\"new name for \",props.name]})]})]})]});var viewTemplate=/*#__PURE__*/_jsxs(\"div\",{className:\"stack-small\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"c-cb\",children:[/*#__PURE__*/_jsx(\"input\",{id:props.id,type:\"checkbox\",defaultChecked:props.completed,onChange:function onChange(){return props.toggleTaskCompleted(props.id);}}),/*#__PURE__*/_jsx(\"label\",{className:\"todo-label\",htmlFor:props.id,children:props.name})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"btn-group\",children:[/*#__PURE__*/_jsxs(\"button\",{type:\"button\",className:\"btn\",onClick:function onClick(){setEditing(true);},ref:editButtonRef,children:[\"Edit \",/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:props.name})]}),/*#__PURE__*/_jsxs(\"button\",{type:\"button\",className:\"btn btn__danger\",onClick:function onClick(){return props.deleteTask(props.id);},children:[\"Delete \",/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:props.name})]})]})]});var wasEditing=usePrevious(isEditing);useEffect(function(){if(!wasEditing&&isEditing){editFieldRef.current.focus();}if(wasEditing&&!isEditing){editButtonRef.current.focus();}},[wasEditing,isEditing]);return/*#__PURE__*/_jsx(\"li\",{className:\"todo stack-small\",children:isEditing?editingTemplate:viewTemplate});}export{Todo};","map":{"version":3,"sources":["C:/Users/hp/Documents/Code/moz-todo-react/src/components/Todo.js"],"names":["React","useEffect","useRef","useState","usePrevious","Todo","props","isEditing","setEditing","newName","setNewName","editFieldRef","editButtonRef","handleChange","e","target","value","handleSubmit","preventDefault","editTask","id","editingTemplate","name","viewTemplate","completed","toggleTaskCompleted","deleteTask","wasEditing","current","focus"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport usePrevious from \"./UsePrevious\";\n\nexport default function Todo(props) {\n  const [isEditing, setEditing] = useState(false);\n  const [newName, setNewName] = useState(\"\");\n\n  const editFieldRef = useRef(null);\n  const editButtonRef = useRef(null);\n\n  function handleChange(e) {\n    setNewName(e.target.value);\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.editTask(props.id, newName);\n    setNewName(\"\");\n    setEditing(false);\n  }\n  const editingTemplate = (\n    <form className=\"stack-small\" onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label className=\"todo-label\" htmlFor={props.id}>\n          New name for {props.name}\n        </label>\n        <input\n          id={props.id}\n          className=\"todo-text\"\n          type=\"text\"\n          value={newName}\n          onChange={handleChange}\n          ref={editFieldRef}\n        />\n      </div>\n      <div className=\"btn-group\">\n        <button\n          type=\"button\"\n          className=\"btn todo-cancel\"\n          onClick={() => {\n            setEditing(false);\n          }}\n        >\n          Cancel\n          <span className=\"visually-hidden\">renaming {props.name}</span>\n        </button>\n        <button\n          type=\"submit\"\n          className=\"btn btn__primary todo-edit\"\n          onClick={() => {\n            setEditing(true);\n          }}\n        >\n          Save\n          <span className=\"visually-hidden\">new name for {props.name}</span>\n        </button>\n      </div>\n    </form>\n  );\n\n  const viewTemplate = (\n    <div className=\"stack-small\">\n      <div className=\"c-cb\">\n        <input\n          id={props.id}\n          type=\"checkbox\"\n          defaultChecked={props.completed}\n          onChange={() => props.toggleTaskCompleted(props.id)}\n        />\n        <label className=\"todo-label\" htmlFor={props.id}>\n          {props.name}\n        </label>\n      </div>\n      <div className=\"btn-group\">\n        <button\n          type=\"button\"\n          className=\"btn\"\n          onClick={() => {\n            setEditing(true);\n          }}\n          ref={editButtonRef}\n        >\n          Edit <span className=\"visually-hidden\">{props.name}</span>\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn__danger\"\n          onClick={() => props.deleteTask(props.id)}\n        >\n          Delete <span className=\"visually-hidden\">{props.name}</span>\n        </button>\n      </div>\n    </div>\n  );\n\n  const wasEditing = usePrevious(isEditing);\n  useEffect(() => {\n    if (!wasEditing && isEditing) {\n      editFieldRef.current.focus();\n    }\n    if (wasEditing && !isEditing) {\n      editButtonRef.current.focus();\n    }\n  }, [wasEditing, isEditing]);\n\n  return (\n    <li className=\"todo stack-small\">\n      {isEditing ? editingTemplate : viewTemplate}\n    </li>\n  );\n}\n\nexport { Todo };\n"]},"metadata":{},"sourceType":"module"}