{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\hp\\\\Documents\\\\Code\\\\moz-todo-react\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport Todo from \"./components/Todo\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\n\nfunction App(props) {\n  _s();\n\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState;\n\n  function addTask(name) {\n    const newTasks = {\n      id: \"todo-\" + nanoid(),\n      name: name,\n      completed: false\n    };\n    setTasks([...tasks, newTasks]);\n  }\n\n  function editTask(id, newName) {\n    const editedTask = tasks.map(task => {\n      if (id === task.id) {\n        return { ...tasks,\n          name: newName\n        };\n      }\n\n      return task;\n    });\n    setTasks(editedTask);\n  }\n\n  function toggleTasksCompleted(id) {\n    const updateTasks = tasks.map(task => {\n      if (id === task.id) {\n        return { ...task,\n          completed: !task.completed\n        };\n      }\n\n      return task;\n    });\n    setTasks(updateTasks);\n    console.log(tasks[0]);\n  }\n\n  function deleteTask(id) {\n    const remainingTask = tasks.filter(task => id !== task.id);\n    setTasks(remainingTask);\n    console.log(id);\n  }\n\n  const taskList = tasks.map(task => /*#__PURE__*/_jsxDEV(Todo, {\n    id: task.id,\n    name: task.name,\n    completed: task.completed,\n    toggleTasksCompleted: toggleTasksCompleted,\n    deleteTask: deleteTask,\n    editTask: editTask\n  }, task.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this));\n  const taskNoun = taskList.length > 1 ? \"tasks\" : \"task\";\n  const taskHeader = `${taskList.length} ${taskNoun} remaining`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoapp stack-large\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TodoMatic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters btn-group stack-exception\",\n      children: [/*#__PURE__*/_jsxDEV(FilterButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilterButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilterButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"list-heading\",\n      children: taskHeader\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      role: \"list\",\n      className: \"todo-list stack-large stack-execption\",\n      \"aria-labelledby\": \"list-heading\",\n      children: taskList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"pjFsLTHS1Kjd+NDyC2kZTexpLic=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/hp/Documents/Code/moz-todo-react/src/App.js"],"names":["React","useState","nanoid","Todo","Form","FilterButton","App","props","tasks","setTasks","filter","setFilter","addTask","name","newTasks","id","completed","editTask","newName","editedTask","map","task","toggleTasksCompleted","updateTasks","console","log","deleteTask","remainingTask","taskList","taskNoun","length","taskHeader"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport Todo from \"./components/Todo\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState\n\n  function addTask(name) {\n    const newTasks = { id: \"todo-\" + nanoid(), name: name, completed: false };\n    setTasks([...tasks, newTasks]);\n  }\n\n  function editTask(id, newName) {\n    const editedTask = tasks.map((task) => {\n      if (id === task.id) {\n        return { ...tasks, name: newName };\n      }\n      return task\n    });\n    setTasks(editedTask)\n  }\n\n  function toggleTasksCompleted(id) {\n    const updateTasks = tasks.map((task) => {\n      if (id === task.id) {\n        return { ...task, completed: !task.completed };\n      }\n      return task;\n    });\n\n    setTasks(updateTasks);\n    console.log(tasks[0]);\n  }\n\n  function deleteTask(id) {\n    const remainingTask = tasks.filter((task) => id !== task.id);\n    setTasks(remainingTask);\n    console.log(id);\n  }\n\n  const taskList = tasks.map((task) => (\n    <Todo\n      id={task.id}\n      name={task.name}\n      completed={task.completed}\n      key={task.id}\n      toggleTasksCompleted={toggleTasksCompleted}\n      deleteTask={deleteTask}\n      editTask={editTask}\n    />\n  ));\n\n  const taskNoun = taskList.length > 1 ? \"tasks\" : \"task\";\n  const taskHeader = `${taskList.length} ${taskNoun} remaining`;\n\n  return (\n    <div className=\"todoapp stack-large\">\n      <h1>TodoMatic</h1>\n      <Form addTask={addTask} />\n      <div className=\"filters btn-group stack-exception\">\n        <FilterButton />\n        <FilterButton />\n        <FilterButton />\n      </div>\n      <h2 id=\"list-heading\">{taskHeader}</h2>\n\n      <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-execption\"\n        aria-labelledby=\"list-heading\"\n      >\n        {taskList}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}