{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\hp\\\\Documents\\\\Code\\\\moz-todo-react\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport Todo from \"./components/Todo\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\nconst FILTER_MAP = {\n  All: () => true,\n  active: task => !task.completed,\n  completed: task => task.completed\n};\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n_c = FILTER_NAMES;\n\nfunction App(props) {\n  _s();\n\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState('All');\n  const filterList = FILTER_MAP.map(name => /*#__PURE__*/_jsxDEV(FilterButton, {\n    name: nam\n  }, name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 46\n  }, this));\n\n  function addTask(name) {\n    const newTasks = {\n      id: \"todo-\" + nanoid(),\n      name: name,\n      completed: false\n    };\n    setTasks([...tasks, newTasks]);\n  }\n\n  function editTask(id, newName) {\n    const editedTask = tasks.map(task => {\n      if (id === task.id) {\n        return { ...tasks,\n          name: newName\n        };\n      }\n\n      return task;\n    });\n    setTasks(editedTask);\n  }\n\n  function toggleTaskCompleted(id) {\n    const updateTasks = tasks.map(task => {\n      if (id === task.id) {\n        return { ...task,\n          completed: !task.completed\n        };\n      }\n\n      return task;\n    });\n    setTasks(updateTasks);\n    console.log(tasks[0]);\n  }\n\n  function deleteTask(id) {\n    const remainingTask = tasks.filter(task => id !== task.id);\n    setTasks(remainingTask);\n    console.log(id);\n  }\n\n  const taskList = tasks.map(task => /*#__PURE__*/_jsxDEV(Todo, {\n    id: task.id,\n    name: task.name,\n    completed: task.completed,\n    toggleTaskCompleted: toggleTaskCompleted,\n    deleteTask: deleteTask,\n    editTask: editTask\n  }, task.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this));\n  const taskNoun = taskList.length > 1 ? \"tasks\" : \"task\";\n  const taskHeader = `${taskList.length} ${taskNoun} remaining`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoapp stack-large\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TodoMatic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters btn-group stack-exception\",\n      children: [/*#__PURE__*/_jsxDEV(FilterButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilterButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilterButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"list-heading\",\n      children: taskHeader\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      role: \"list\",\n      className: \"todo-list stack-large stack-execption\",\n      \"aria-labelledby\": \"list-heading\",\n      children: taskList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"EeRnFHbkPD5i3v9CpmwzSMi80Ig=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FILTER_NAMES\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["C:/Users/hp/Documents/Code/moz-todo-react/src/App.js"],"names":["React","useState","nanoid","Todo","Form","FilterButton","FILTER_MAP","All","active","task","completed","FILTER_NAMES","Object","keys","App","props","tasks","setTasks","filter","setFilter","filterList","map","name","nam","addTask","newTasks","id","editTask","newName","editedTask","toggleTaskCompleted","updateTasks","console","log","deleteTask","remainingTask","taskList","taskNoun","length","taskHeader"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport Todo from \"./components/Todo\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\n\nconst FILTER_MAP = {\n  All : () => true,\n  active: task=> !task.completed,\n  completed : task => task.completed\n}\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP)\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState('All')\n\n  const filterList = FILTER_MAP.map(name => (<FilterButton key={name} name={nam} />))\n\n  function addTask(name) {\n    const newTasks = { id: \"todo-\" + nanoid(), name: name, completed: false };\n    setTasks([...tasks, newTasks]);\n  }\n\n  function editTask(id, newName) {\n    const editedTask = tasks.map((task) => {\n      if (id === task.id) {\n        return { ...tasks, name: newName };\n      }\n      return task\n    });\n    setTasks(editedTask)\n  }\n\n  function toggleTaskCompleted(id) {\n    const updateTasks = tasks.map((task) => {\n      if (id === task.id) {\n        return { ...task, completed: !task.completed };\n      }\n      return task;\n    });\n\n    setTasks(updateTasks);\n    console.log(tasks[0]);\n  }\n\n  function deleteTask(id) {\n    const remainingTask = tasks.filter((task) => id !== task.id);\n    setTasks(remainingTask);\n    console.log(id);\n  }\n\n  const taskList = tasks.map((task) => (\n    <Todo\n      id={task.id}\n      name={task.name}\n      completed={task.completed}\n      key={task.id}\n      toggleTaskCompleted={toggleTaskCompleted}\n      deleteTask={deleteTask}\n      editTask={editTask}\n    />\n  ));\n\n  const taskNoun = taskList.length > 1 ? \"tasks\" : \"task\";\n  const taskHeader = `${taskList.length} ${taskNoun} remaining`;\n\n  return (\n    <div className=\"todoapp stack-large\">\n      <h1>TodoMatic</h1>\n      <Form addTask={addTask} />\n      <div className=\"filters btn-group stack-exception\">\n        <FilterButton />\n        <FilterButton />\n        <FilterButton />\n      </div>\n      <h2 id=\"list-heading\">{taskHeader}</h2>\n\n      <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-execption\"\n        aria-labelledby=\"list-heading\"\n      >\n        {taskList}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}